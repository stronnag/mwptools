using Gtk 4.0;
using Adw 1;

template $SurveyDialog: Adw.Window {
  icon-name: "mwp_icon";
  title: "Survey Definition";

  Adw.ToolbarView {
    [top]
    Adw.HeaderBar {
      decoration-layout: "icon:close";
      [start]
      MenuButton button_menu {
        icon-name: "open-menu-symbolic";
        primary: true;
        always-show-arrow: false;
      }
      [end]
      Gtk.DropDown as_type {
          model: StringList {
            strings [
              "Parallel",
              "Square",
              "Spiral"
            ]
	  };
	}
    }

    content: Box {
      orientation: vertical;
      spacing: 8;

      [start]
      Grid pgrid {
	column-spacing: 10;
	row-spacing: 4;
	column-homogeneous: true;
	Gtk.Label {
          label: "Angle (°):";
          layout {
            row: '0';
            column: '0';
          }
        }
	Gtk.Entry as_angle {
          input-purpose: number;
          layout {
            row: '0';
            column: '1';
          }
	}

	Gtk.Label {
          label: "1st Turn:";
          layout {
            row: '1';
            column: '0';
          }
	}
	Gtk.DropDown as_turn {
          model: StringList {
            strings [
              "Left",
              "Right"
            ]
	  };
          layout {
            row: '1';
            column: '1';
          }
	}

	Gtk.Label {
          label: "Row Separation (m):";
          layout {
            row: '2';
            column: '0';
          }
        }
	Gtk.Entry as_rowsep {
          input-purpose: number;
          layout {
            row: '2';
            column: '1';
          }
	}
      }

      Grid sgrid {
	column-homogeneous: true;
	column-spacing: 10;
	row-spacing: 4;
	visible: false;

	Gtk.Label {
          label: "Angle (°):";
          layout {
            row: '0';
            column: '0';
          }
        }
	Gtk.Entry ss_angle {
          input-purpose: number;
          layout {
            row: '0';
            column: '1';
          }
	}

	Gtk.Label {
          label: "1st leg (m):";
          layout {
            row: '1';
            column: '0';
          }
	}
	Gtk.Entry ss_dist {
          input-purpose: number;
          layout {
            row: '1';
            column: '1';
          }
	}
	Gtk.Label {
          label: "Expansions:";
          layout {
            row: '3';
            column: '0';
          }
	}
	Gtk.Entry ss_exp {
          input-purpose: number;
          layout {
            row: '3';
            column: '1';
          }
	}
      }
      Grid mgrid {
	column-homogeneous: true;
	column-spacing: 10;
	row-spacing: 4;

	Gtk.Label {
          label: "Altitude (m):";
          layout {
            row: '0';
            column: '0';
          }
        }
	Gtk.Entry as_altm {
          input-purpose: number;
          layout {
            row: '0';
            column: '1';
          }
	}

	Gtk.Label {
          label: "AMSL / Ground clearance:";
          layout {
            row: '1';
            column: '0';
          }
        }

	Gtk.CheckButton as_amsl {
	  hexpand: false;
	  halign: start;
	  tooltip-text: 'Sets the mission WP altitude as absolute (WP AMSL + elevation value)';
	  layout {
            row: '1';
            column: '1';
          }
	}

	Gtk.Label {
          label: "Leg Speed (m/s):";
          layout {
            row: '2';
            column: '0';
          }
        }
	Gtk.Entry as_speed {
          input-purpose: number;
          layout {
            row: '2';
            column: '1';
          }
	}

	Gtk.Label {
          label: "RTH:";
          layout {
            row: '3';
            column: '0';
          }
        }
	Gtk.Switch as_rth {
          hexpand: false;
          vexpand: false;
          halign: start;
          valign: start;
          layout {
	    row: 3;
	    column: 1;
          }
	}

      }

      Gtk.Frame {
	Gtk.Box {
	  orientation: vertical;
	  Gtk.Label {
	    use-markup: true;
            label: "<b>Mission Data</b>";
	    halign: center;
	    hexpand: true;
          }

	  Grid {
	    column-spacing: 16;
	    row-spacing: 4;
	    Gtk.Label {
	      use-markup: true;
              label: "<b>Points:</b>";
              layout {
		row: '1';
		column: '0';
              }
            }
	    Gtk.Label as_npoints {
              layout {
		row: '1';
		column: '1';
              }
	    }
	    Gtk.Label {
	      use-markup: true;
              label: "<b>Distance:</b>";
              layout {
		row: '2';
		column: '0';
              }
            }
	    Gtk.Label as_dist {
              layout {
		row: '2';
		column: '1';
              }
	    }
	    Gtk.Label {
	      use-markup: true;
              label: "<b>Flight Time:</b>";
              layout {
		row: '3';
		column: '0';
              }
            }
	    Gtk.Label as_time {
              layout {
		row: '3';
		column: '1';
              }
	    }
	  }
	}
      }


      Box {
        orientation: horizontal;
        spacing: 4;
        halign: end;
        hexpand: true;

        Button as_apply {
          halign: end;
          label: _("Apply");
	  tooltip-text: 'Generates outline survey path; requires that the row separation is consitent with the survey bounding box';
        }

        Button as_view {
          halign: end;
          label: _("Reset View");
	  tooltip-text: 'Resets the survey bounding box to fit within the current view / zoom level';
        }
        Button as_mission {
          halign: end;
          label: _("Generate Mission");
	  tooltip-text: 'Generates a mission from the outline survey view. Requires that the row separation is consitent with maximum mission size';
        }
      }
    };
  }
}
